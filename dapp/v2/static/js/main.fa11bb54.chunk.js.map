{"version":3,"sources":["assets/nftfy.svg","assets/metamask.svg","assets/portis.svg","assets/ft-active.svg","assets/nft-active.svg","assets/ft.svg","assets/nft.svg","services/api.ts","context/WalletContext.tsx","components/ContractSecuritization/ContractClaim/ContractClaim.tsx","components/ContractSecuritization/ContractData/ContractData.tsx","components/ContractSecuritization/ContractImage/ContractImage.tsx","components/ContractSecuritization/ContractRedeem/ContractRedeem.tsx","components/ContractSecuritization/ContractSecuritizationDetail/ContractSecuritizationDetail.tsx","services/notification.ts","components/ContractSecuritization/ContractSecuritizationEdit/ContractSecuritizationEdit.tsx","components/shared/layout/Footer/Footer.tsx","components/shared/layout/Header/Header.tsx","components/shared/modal/WalletManagerModal/WalletManagerModal.tsx","screens/ContractSecuritization/ContractSecuritization.tsx","components/FungibleTokens/FungibleTokensEmpty/FungibleTokensEmpty.tsx","components/FungibleTokens/FungibleTokensList/FungibleTokensList.tsx","components/FungibleTokens/FungibleTokens.tsx","components/NonFungibleTokens/AddNonFungibleTokens/AddNonFungibleTokens.tsx","components/NonFungibleTokens/NonFungibleTokensEmpty/NonFungibleTokensEmpty.tsx","components/NonFungibleTokens/NonFungibleTokensList/NonFungibleTokensList.tsx","components/NonFungibleTokens/NonFungibleTokens.tsx","screens/Home/Home.tsx","Routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","getWeb3","walletName","a","window","ethereum","enable","Web3","web3","Error","currentProvider","portis","Portis","provider","NFTFY_ABI","require","abi","ERC721_ABI","ERC20_ABI","listSupportedWallets","initializeWallet","nftfy","valid","coins","units","newERC721Item","newERC721","newERC20","getAccounts","selectAccount","validateAddress","getEtherBalance","listAccountShares","listAccountItems","registerERC721","listPaymentTokens","listNonFungibleTokens","contracts","network","push","address","contract","offset","limit","items","count","subitems","subcount","concat","length","getWrapper","wrapper","listAllItems","Number","MAX_SAFE_INTEGER","subitem","getItem","tokenId","target","listAllShares","subsubitems","subsubitem","getAccountBalance","decimals","Promise","resolve","reject","eth","getBalance","error","balance","utils","isAddress","account","accounts","getTotalSupply","validateAmount","getERC721Item","getPaymentToken","getExitPrice","getSharePrice","getSharesCount","isRedeemable","getAccountRedeemAmount","approve","redeem","isClaimable","getVaultBalance","getAccountVaultBalance","claim","methods","send","from","once","confNumber","receipt","paymentToken","vaultBalanceOf","call","vaultBalance","released","redeemAmount","value","Contract","redeemAmountOf","sharesCount","sharePrice","exitPrice","_abi","_address","amount","balanceOf","totalSupply","defaultName","defaultSymbol","defaultDecimals","name","symbol","wrappers","i","Math","min","tokenOfOwnerByIndex","self","tokenByIndex","getTokenURI","loadMetadata","getTokenOwner","isSecuritized","securitize","paymentDecimals","paymentAddress","historyLength","historyAt","securitized","ownerOf","CORS_PREFIX","uri","headers","axios","get","response","data","description","image","imageUri","console","log","message","tokenURI","indexOf","s","slice","repeat","padStart","RegExp","test","net","getNetworkType","WalletContext","React","createContext","undefined","setWalletName","wallet","setWallet","setAccounts","accountIndex","setAccountIndex","accountItems","setAccountItems","accountItemsCount","setAccountItemsCount","accountShares","setAccountShares","accountSharesCount","setAccountSharesCount","WalletContextWrapper","props","children","useState","rehydrate","setRehydrate","persistOffline","useCallback","localStorage","setItem","JSON","stringify","useEffect","rehydrateOffline","supportedWallets","walletNameStorage","includes","walletStorage","accountsStorage","accountIndexStorage","parse","Provider","ContractClaim","dataSource","label","shares","receive","className","columns","dataIndex","key","pagination","rowKey","onClick","type","size","ContractData","title","ContractImage","meta","src","split","alt","ContractRedeem","participation","shareBalance","pay","ContractSecuritizationDetail","useContext","contractImg","setContractImg","setIsRedeemable","setIsClaimable","setTotalSupply","issuedShare","setIssuedShare","setExitPrice","setPay","setReceive","location","useLocation","history","useHistory","contractId","pathname","find","accountShare","getContractImg","erc721","getContractData","redeemContract","claimContract","errorNotification","notification","placement","duration","Option","Select","ContractSecuritizationEdit","loading","setLoading","accountItem","paymentTokens","setPaymentTokens","setPaymentToken","tokens","selectAfter","defaultValue","onChange","map","paymentTokenItem","placeholder","addonAfter","event","payToken","showHeader","Footer","Header","buttonAction","dropdownMenu","_account","index","Item","to","ntfy","overlay","disabled","substring","DownOutlined","WalletManagerModal","visible","setVisible","setSupportedWallets","loadingWallet","setLoadingWallet","loadWallets","selectWallet","handleCancel","footer","onCancel","width","icon","metamask","height","ContractSecuritization","openWalletModal","setOpenWalletModal","openWalletManager","FungibleTokensEmpty","ft","FungibleTokensList","setPagination","getAccountSharesCount","accountSharesItem","all","shareItem","erc721ImageUri","accountSharesItemPromise","page","setPage","current","total","pageNumber","FungibleTokens","setOffset","loadAccountShares","fts","offsetNumber","AddNonFungibleTokens","nftInput","setNftInput","addNft","nfts","NonFungibleTokensEmpty","nft","NonFungibleTokensList","NonFungibleTokens","loadAccountItems","Home","Routes","path","exact","component","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fa11bb54.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nftfy.2ed2b396.svg\";","module.exports = __webpack_public_path__ + \"static/media/metamask.433dec51.svg\";","module.exports = __webpack_public_path__ + \"static/media/portis.80e60fbb.svg\";","module.exports = __webpack_public_path__ + \"static/media/ft-active.65a241de.svg\";","module.exports = __webpack_public_path__ + \"static/media/nft-active.2cab6182.svg\";","module.exports = __webpack_public_path__ + \"static/media/ft.20bf0fe5.svg\";","module.exports = __webpack_public_path__ + \"static/media/nft.98b107db.svg\";","/* eslint-disable */\r\nimport Portis from '@portis/web3'\r\nimport axios from 'axios'\r\nimport Web3 from 'web3'\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ethereum: any\r\n    web3: any\r\n  }\r\n}\r\n\r\nexport type WalletName = 'metamask' | 'portis'\r\n\r\nexport interface Wallet {\r\n  network: string\r\n  getAccounts(): Promise<string[]>\r\n  selectAccount(address: string): Promise<void>\r\n  validateAddress(address: string): Promise<boolean>\r\n  getEtherBalance(address: string): Promise<string>\r\n  listAccountShares(address: string, offset: number, limit: number): Promise<{ items: ERC20[]; count: number }>\r\n  listAccountItems(address: string, offset: number, limit: number): Promise<{ items: ERC721Item[]; count: number }>\r\n  registerERC721(address: string): Promise<boolean>\r\n  listPaymentTokens(): Promise<ERC20[]>\r\n}\r\n\r\nexport interface ERC20 {\r\n  address: string\r\n  name: string\r\n  symbol: string\r\n  decimals: number\r\n  getTotalSupply(): Promise<string>\r\n  getAccountBalance(address: string): Promise<string> // pegar numero de shares\r\n  validateAmount(amount: string): Promise<boolean>\r\n\r\n  // Nftfy extensions\r\n  getERC721Item(): Promise<ERC721Item>\r\n\r\n  getPaymentToken(): Promise<ERC20 | null> // pegar saldo da carteira (getAccountBalance),  se for null getEtherBalance da interface wallet\r\n  getExitPrice(): Promise<string>\r\n  getSharePrice(): Promise<string>\r\n  getSharesCount(): Promise<string> // total de shares  (fazer calculo percentual )\r\n\r\n  isRedeemable(): Promise<boolean>\r\n  getAccountRedeemAmount(address: string): Promise<string>\r\n  redeem(address: string): Promise<void>\r\n\r\n  isClaimable(): Promise<boolean>\r\n  getVaultBalance(): Promise<string>\r\n  getAccountVaultBalance(address: string): Promise<string>\r\n  claim(address: string): Promise<void>\r\n}\r\n\r\nexport interface ERC721 {\r\n  address: string\r\n  name: string\r\n  symbol: string\r\n  getItem(tokenId: string): Promise<ERC721Item>\r\n  listAllItems(offset: number, limit: number): Promise<{ items: ERC721Item[]; count: number }>\r\n  listAccountItems(address: string, offset: number, limit: number): Promise<{ items: ERC721Item[]; count: number }>\r\n\r\n  // Nftfy extensions\r\n  getWrapper(): Promise<ERC721 | null>\r\n}\r\n\r\nexport interface ERC721Item {\r\n  contract: ERC721\r\n  tokenId: string\r\n  name?: string\r\n  description?: string\r\n  imageUri?: string\r\n  getTokenOwner(): Promise<string>\r\n\r\n  // Nftfy extensions\r\n  isSecuritized(): Promise<boolean> // 1\r\n  listAllShares(offset: number, limit: number): Promise<{ items: ERC20[]; count: number }>\r\n  securitize(sharesCount: string, exitPrice: string, paymentToken: ERC20 | null): Promise<void> // 1\r\n}\r\n\r\nasync function getWeb3(walletName: WalletName): Promise<Web3> {\r\n  switch (walletName) {\r\n    case 'metamask':\r\n      if (window.ethereum) {\r\n        await window.ethereum.enable()\r\n        return new Web3(window.ethereum)\r\n      }\r\n      if (!window.web3) throw new Error('Unsupported wallet')\r\n      return new Web3(window.web3.currentProvider)\r\n    case 'portis':\r\n      const portis = new Portis('a0fa4f71-2d8e-4a67-baa6-33ab41c3ba26', 'mainnet')\r\n      return new Web3(portis.provider)\r\n  }\r\n}\r\n\r\nconst NFTFY_ABI = require('../contracts/Nftfy.json').abi\r\nconst ERC721_ABI = require('../contracts/ERC721Wrapper.json').abi\r\nconst ERC20_ABI = require('../contracts/ERC721Shares.json').abi\r\n\r\nexport async function listSupportedWallets(): Promise<WalletName[]> {\r\n  if (window.ethereum || window.web3) return ['metamask', 'portis']\r\n  return ['portis']\r\n}\r\n\r\nexport async function initializeWallet(walletName: WalletName): Promise<Wallet> {\r\n  let account = '0x0000000000000000000000000000000000000000'\r\n\r\n  const web3 = await getWeb3(walletName)\r\n  const network = await web3.eth.net.getNetworkType()\r\n  const contracts: ERC721[] = await listNonFungibleTokens()\r\n\r\n  async function nftfy(): Promise<string> {\r\n    switch (network) {\r\n      case 'main':\r\n        return '0x640eb33362Caced0B5843F3CF64cF6c469Dd11d7'\r\n      case 'ropsten':\r\n        return '0x640eb33362Caced0B5843F3CF64cF6c469Dd11d7'\r\n      case 'rinkeby':\r\n        return '0x640eb33362Caced0B5843F3CF64cF6c469Dd11d7'\r\n      case 'kovan':\r\n        return '0x640eb33362Caced0B5843F3CF64cF6c469Dd11d7'\r\n      case 'goerli':\r\n        return '0x640eb33362Caced0B5843F3CF64cF6c469Dd11d7'\r\n    }\r\n    throw new Error('Unsupported network')\r\n  }\r\n\r\n  function valid(amount: string, decimals: number): boolean {\r\n    const regex = new RegExp(`^\\\\d+${decimals > 0 ? `(\\\\.\\\\d{1,${decimals}})?` : ''}$`)\r\n    return regex.test(amount)\r\n  }\r\n\r\n  function coins(units: string, decimals: number): string {\r\n    if (!valid(units, 0)) throw new Error('Invalid amount')\r\n    const s = units.padStart(1 + decimals, '0')\r\n    return `${s.slice(0, -decimals)}.${s.slice(-decimals)}`\r\n  }\r\n\r\n  function units(coins: string, decimals: number): string {\r\n    if (!valid(coins, decimals)) throw new Error('Invalid amount')\r\n    let i = coins.indexOf('.')\r\n    if (i < 0) i = coins.length\r\n    const s = coins.slice(i + 1)\r\n    return coins.slice(0, i) + s + '0'.repeat(decimals - s.length)\r\n  }\r\n\r\n  async function newERC721Item(contract: ERC721, tokenId: string): Promise<ERC721Item> {\r\n    let self: ERC721Item\r\n\r\n    const { name, description, imageUri } = await loadMetadata()\r\n\r\n    function getTokenURI(): Promise<string> {\r\n      const abi = new web3.eth.Contract(ERC721_ABI, contract.address)\r\n      return abi.methods.tokenURI(tokenId).call()\r\n    }\r\n\r\n    async function loadMetadata(): Promise<{ name?: string; description?: string; imageUri?: string }> {\r\n      try {\r\n        const CORS_PREFIX = 'https://cors-anywhere.herokuapp.com/'\r\n        const uri = await getTokenURI()\r\n        const headers: { [key: string]: string } = {}\r\n        // headers.Origin = 'https://nftfy.tk'\r\n        const response = await axios.get(CORS_PREFIX + uri, { headers })\r\n        const { name, description, image } = response.data\r\n        const imageUri = image ? CORS_PREFIX + image : image\r\n        return { name, description, imageUri }\r\n      } catch (e) {\r\n        console.log('ERC721Item.loadMetadata', contract.address, tokenId, e.message)\r\n        return {}\r\n      }\r\n    }\r\n\r\n    function getTokenOwner(): Promise<string> {\r\n      const abi = new web3.eth.Contract(ERC721_ABI, contract.address)\r\n      return abi.methods.ownerOf(tokenId).call()\r\n    }\r\n\r\n    async function isSecuritized(): Promise<boolean> {\r\n      const wrapper = await contract.getWrapper()\r\n      if (wrapper == null) return false\r\n      const abi = new web3.eth.Contract(ERC721_ABI, wrapper.address)\r\n      return abi.methods.securitized(tokenId).call()\r\n    }\r\n\r\n    async function listAllShares(offset: number, limit: number): Promise<{ items: ERC20[]; count: number }> {\r\n      if (offset < 0) throw new Error('Invalid offset')\r\n      if (limit < 0) throw new Error('Invalid limit')\r\n      const wrapper = await contract.getWrapper()\r\n      if (wrapper == null) return { items: [], count: 0 }\r\n      const abi = new web3.eth.Contract(ERC721_ABI, wrapper.address)\r\n      const items: ERC20[] = []\r\n      const count = Number(await abi.methods.historyLength(tokenId).call())\r\n      for (let i = offset; i < Math.min(offset + limit, count); i++) {\r\n        const address = await abi.methods.historyAt(tokenId, i).call()\r\n        items.push(await newERC20(address))\r\n      }\r\n      return { items, count }\r\n    }\r\n\r\n    async function approve(address: string): Promise<void> {\r\n      const abi = new web3.eth.Contract(ERC721_ABI, contract.address)\r\n      return new Promise((resolve, reject) => {\r\n        abi.methods\r\n          .approve(address, tokenId)\r\n          .send({ from: account })\r\n          .once('confirmation', (confNumber: any, receipt: any) => resolve())\r\n          .once('error', reject)\r\n      })\r\n    }\r\n\r\n    async function securitize(sharesCount: string, exitPrice: string, paymentToken: ERC20 | null): Promise<void> {\r\n      const address = await nftfy()\r\n      const abi = new web3.eth.Contract(NFTFY_ABI, address)\r\n      const decimals = 8\r\n      const paymentDecimals = paymentToken ? paymentToken.decimals : 18\r\n      const paymentAddress = paymentToken ? paymentToken.address : '0x0000000000000000000000000000000000000000'\r\n      await approve(address)\r\n      return new Promise((resolve, reject) => {\r\n        abi.methods\r\n          .securitize(\r\n            contract.address,\r\n            tokenId,\r\n            units(sharesCount, decimals),\r\n            decimals,\r\n            units(exitPrice, paymentDecimals),\r\n            paymentAddress,\r\n            false\r\n          )\r\n          .send({ from: account })\r\n          .once('confirmation', (confNumber: any, receipt: any) => resolve())\r\n          .once('error', reject)\r\n      })\r\n    }\r\n\r\n    return (self = {\r\n      contract,\r\n      tokenId,\r\n      name,\r\n      description,\r\n      imageUri,\r\n      getTokenOwner,\r\n      isSecuritized,\r\n      listAllShares,\r\n      securitize\r\n    })\r\n  }\r\n\r\n  async function newERC721(address: string, defaultName = '', defaultSymbol = ''): Promise<ERC721> {\r\n    let self: ERC721\r\n\r\n    const abi = new web3.eth.Contract(ERC721_ABI, address)\r\n    const name = await (async () => {\r\n      try {\r\n        return await abi.methods.name().call()\r\n      } catch (e) {\r\n        return defaultName\r\n      }\r\n    })()\r\n    const symbol = await (async () => {\r\n      try {\r\n        return await abi.methods.symbol().call()\r\n      } catch (e) {\r\n        return defaultSymbol\r\n      }\r\n    })()\r\n\r\n    function getItem(tokenId: string): Promise<ERC721Item> {\r\n      return newERC721Item(self, tokenId)\r\n    }\r\n\r\n    async function listAllItems(offset: number, limit: number): Promise<{ items: ERC721Item[]; count: number }> {\r\n      if (offset < 0) throw new Error('Invalid offset')\r\n      if (limit < 0) throw new Error('Invalid limit')\r\n      const items: ERC721Item[] = []\r\n      const count = Number(await abi.methods.totalSupply().call())\r\n      for (let i = offset; i < Math.min(offset + limit, count); i++) {\r\n        const tokenId = await abi.methods.tokenByIndex(i).call()\r\n        items.push(await newERC721Item(self, tokenId))\r\n      }\r\n      return { items, count }\r\n    }\r\n\r\n    async function listAccountItems(address: string, offset: number, limit: number): Promise<{ items: ERC721Item[]; count: number }> {\r\n      if (offset < 0) throw new Error('Invalid offset')\r\n      if (limit < 0) throw new Error('Invalid limit')\r\n      const items: ERC721Item[] = []\r\n      const count = Number(await abi.methods.balanceOf(address).call())\r\n      for (let i = offset; i < Math.min(offset + limit, count); i++) {\r\n        const tokenId = await abi.methods.tokenOfOwnerByIndex(address, i).call()\r\n        items.push(await newERC721Item(self, tokenId))\r\n      }\r\n      return { items, count }\r\n    }\r\n\r\n    async function getWrapper(): Promise<ERC721 | null> {\r\n      const abi = new web3.eth.Contract(NFTFY_ABI, await nftfy())\r\n      const _address = await abi.methods.wrappers(address).call()\r\n      if (_address == '0x0000000000000000000000000000000000000000') return null\r\n      return newERC721(_address)\r\n    }\r\n\r\n    return (self = {\r\n      address,\r\n      name,\r\n      symbol,\r\n      getItem,\r\n      listAllItems,\r\n      listAccountItems,\r\n      getWrapper\r\n    })\r\n  }\r\n\r\n  async function newERC20(address: string, defaultName = '', defaultSymbol = '', defaultDecimals = 18): Promise<ERC20> {\r\n    let self: ERC20\r\n\r\n    const abi = new web3.eth.Contract(ERC20_ABI, address)\r\n    const name = await (async () => {\r\n      try {\r\n        return await abi.methods.name().call()\r\n      } catch (e) {\r\n        return defaultName\r\n      }\r\n    })()\r\n    const symbol = await (async () => {\r\n      try {\r\n        return await abi.methods.symbol().call()\r\n      } catch (e) {\r\n        return defaultSymbol\r\n      }\r\n    })()\r\n    const decimals = await (async () => {\r\n      try {\r\n        return Number(await abi.methods.decimals().call())\r\n      } catch (e) {\r\n        return defaultDecimals\r\n      }\r\n    })()\r\n\r\n    async function getTotalSupply(): Promise<string> {\r\n      return coins(await abi.methods.totalSupply().call(), decimals)\r\n    }\r\n\r\n    async function getAccountBalance(address: string): Promise<string> {\r\n      return coins(await abi.methods.balanceOf(address).call(), decimals)\r\n    }\r\n\r\n    async function validateAmount(amount: string): Promise<boolean> {\r\n      return valid(amount, decimals)\r\n    }\r\n\r\n    async function getERC721Item(): Promise<ERC721Item> {\r\n      const address = await abi.methods.wrapper().call()\r\n      const tokenId = await abi.methods.tokenId().call()\r\n      const _abi = new web3.eth.Contract(ERC721_ABI, address)\r\n      const _address = await _abi.methods.target().call()\r\n      const contract = await newERC721(_address)\r\n      return newERC721Item(contract, tokenId)\r\n    }\r\n\r\n    async function getPaymentToken(): Promise<ERC20 | null> {\r\n      const address = await abi.methods.paymentToken().call()\r\n      if (address == '0x0000000000000000000000000000000000000000') return null\r\n      return newERC20(address)\r\n    }\r\n\r\n    async function getExitPrice(): Promise<string> {\r\n      const paymentToken = await getPaymentToken()\r\n      const decimals = paymentToken ? paymentToken.decimals : 18\r\n      return coins(await abi.methods.exitPrice().call(), decimals)\r\n    }\r\n\r\n    async function getSharePrice(): Promise<string> {\r\n      const paymentToken = await getPaymentToken()\r\n      const decimals = paymentToken ? paymentToken.decimals : 18\r\n      return coins(await abi.methods.sharePrice().call(), decimals)\r\n    }\r\n\r\n    async function getSharesCount(): Promise<string> {\r\n      const paymentToken = await getPaymentToken()\r\n      return coins(await abi.methods.sharesCount().call(), decimals)\r\n    }\r\n\r\n    async function isRedeemable(): Promise<boolean> {\r\n      return !(await abi.methods.released().call())\r\n    }\r\n\r\n    async function getAccountRedeemAmount(address: string): Promise<string> {\r\n      const paymentToken = await getPaymentToken()\r\n      const decimals = paymentToken ? paymentToken.decimals : 18\r\n      return coins(await abi.methods.redeemAmountOf(address).call(), decimals)\r\n    }\r\n\r\n    async function approve(paymentToken: ERC20, redeemAmount: string): Promise<void> {\r\n      const { decimals } = paymentToken\r\n      const abi = new web3.eth.Contract(ERC20_ABI, paymentToken.address)\r\n      return new Promise((resolve, reject) => {\r\n        abi.methods\r\n          .approve(address, units(redeemAmount, decimals))\r\n          .send({ from: account })\r\n          .once('confirmation', (confNumber: any, receipt: any) => resolve())\r\n          .once('error', reject)\r\n      })\r\n    }\r\n\r\n    async function redeem(address: string): Promise<void> {\r\n      const paymentToken = await getPaymentToken()\r\n      const redeemAmount = await getAccountRedeemAmount(account)\r\n      if (paymentToken == null) {\r\n        const decimals = 18\r\n        return new Promise((resolve, reject) => {\r\n          abi.methods\r\n            .redeem()\r\n            .send({ from: account, value: units(redeemAmount, decimals) })\r\n            .once('confirmation', (confNumber: any, receipt: any) => resolve())\r\n            .once('error', reject)\r\n        })\r\n      }\r\n      await approve(paymentToken, redeemAmount)\r\n      return new Promise((resolve, reject) => {\r\n        abi.methods\r\n          .redeem()\r\n          .send({ from: account })\r\n          .once('confirmation', (confNumber: any, receipt: any) => resolve())\r\n          .once('error', reject)\r\n      })\r\n    }\r\n\r\n    function isClaimable(): Promise<boolean> {\r\n      return abi.methods.released().call()\r\n    }\r\n\r\n    async function getVaultBalance(): Promise<string> {\r\n      const paymentToken = await getPaymentToken()\r\n      const decimals = paymentToken ? paymentToken.decimals : 18\r\n      return coins(await abi.methods.vaultBalance().call(), decimals)\r\n    }\r\n\r\n    async function getAccountVaultBalance(address: string): Promise<string> {\r\n      const paymentToken = await getPaymentToken()\r\n      const decimals = paymentToken ? paymentToken.decimals : 18\r\n      return coins(await abi.methods.vaultBalanceOf(address).call(), decimals)\r\n    }\r\n\r\n    function claim(address: string): Promise<void> {\r\n      return new Promise((resolve, reject) => {\r\n        abi.methods\r\n          .claim()\r\n          .send({ from: account })\r\n          .once('confirmation', (confNumber: any, receipt: any) => resolve())\r\n          .once('error', reject)\r\n      })\r\n    }\r\n\r\n    return (self = {\r\n      address,\r\n      name,\r\n      symbol,\r\n      decimals,\r\n      getTotalSupply,\r\n      getAccountBalance,\r\n      validateAmount,\r\n      getERC721Item,\r\n      getPaymentToken,\r\n      getExitPrice,\r\n      getSharePrice,\r\n      getSharesCount,\r\n      isRedeemable,\r\n      getAccountRedeemAmount,\r\n      redeem,\r\n      isClaimable,\r\n      getVaultBalance,\r\n      getAccountVaultBalance,\r\n      claim\r\n    })\r\n  }\r\n\r\n  function getAccounts(): Promise<string[]> {\r\n    return new Promise((resolve, reject) => {\r\n      web3.eth.getAccounts((error, accounts) => {\r\n        if (error) return reject(error)\r\n        return resolve(accounts)\r\n      })\r\n    })\r\n  }\r\n\r\n  async function selectAccount(address: string): Promise<void> {\r\n    if (!(await validateAddress(address))) throw new Error('Invalid address')\r\n    account = address\r\n  }\r\n\r\n  async function validateAddress(address: string): Promise<boolean> {\r\n    return web3.utils.isAddress(address)\r\n  }\r\n\r\n  function getEtherBalance(address: string): Promise<string> {\r\n    return new Promise((resolve, reject) => {\r\n      web3.eth.getBalance(address, 'latest', (error, balance) => {\r\n        if (error) return reject(error)\r\n        return resolve(coins(balance, 18))\r\n      })\r\n    })\r\n  }\r\n\r\n  async function listAccountShares(address: string, offset: number, limit: number): Promise<{ items: ERC20[]; count: number }> {\r\n    if (offset < 0) throw new Error('Invalid offset')\r\n    if (limit < 0) throw new Error('Invalid limit')\r\n    const items: ERC20[] = []\r\n    let count = 0\r\n    for (const contract of contracts) {\r\n      const wrapper = await contract.getWrapper()\r\n      if (wrapper == null) continue\r\n      const { items: subitems } = await wrapper.listAllItems(0, Number.MAX_SAFE_INTEGER)\r\n      for (const subitem of subitems) {\r\n        const target = await contract.getItem(subitem.tokenId)\r\n        const { items: subsubitems } = await target.listAllShares(0, Number.MAX_SAFE_INTEGER)\r\n        for (const subsubitem of subsubitems) {\r\n          const balance = await subsubitem.getAccountBalance(address)\r\n          if (balance != coins('0', subsubitem.decimals)) {\r\n            if (count == offset && limit > 0) {\r\n              items.push(subsubitem)\r\n              offset++\r\n              limit--\r\n            }\r\n            count++\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return { items, count }\r\n  }\r\n\r\n  async function listAccountItems(address: string, offset: number, limit: number): Promise<{ items: ERC721Item[]; count: number }> {\r\n    if (offset < 0) throw new Error('Invalid offset')\r\n    if (limit < 0) throw new Error('Invalid limit')\r\n    let items: ERC721Item[] = []\r\n    let count = 0\r\n    for (const contract of contracts) {\r\n      const { items: subitems, count: subcount } = await contract.listAccountItems(address, offset, limit)\r\n      items = items.concat(subitems)\r\n      count += subcount\r\n      offset += subitems.length\r\n      limit -= subitems.length\r\n      if (limit == 0) continue\r\n      offset -= subcount\r\n    }\r\n    return { items, count }\r\n  }\r\n\r\n  async function registerERC721(address: string): Promise<boolean> {\r\n    for (const contract of contracts) {\r\n      if (address == contract.address) return false\r\n    }\r\n    contracts.push(await newERC721(address))\r\n    return true\r\n  }\r\n\r\n  async function listPaymentTokens(): Promise<ERC20[]> {\r\n    const contracts: ERC20[] = []\r\n    switch (network) {\r\n      case 'main':\r\n        contracts.push(await newERC20('0x6B175474E89094C44Da98b954EedeAC495271d0F')) // DAI\r\n        contracts.push(await newERC20('0xdAC17F958D2ee523a2206206994597C13D831ec7')) // USDT\r\n        contracts.push(await newERC20('0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599')) // WBTC\r\n        contracts.push(await newERC20('0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2')) // WETH\r\n        break\r\n      case 'ropsten':\r\n        contracts.push(await newERC20('0x1C4E37Cb2A1DE715A73Cd7Fc1aF0855Beee98209')) // BUK\r\n        break\r\n      case 'rinkeby':\r\n        contracts.push(await newERC20('0x1C4E37Cb2A1DE715A73Cd7Fc1aF0855Beee98209')) // BUK\r\n        break\r\n      case 'kovan':\r\n        contracts.push(await newERC20('0x1C4E37Cb2A1DE715A73Cd7Fc1aF0855Beee98209')) // BUK\r\n        break\r\n      case 'goerli':\r\n        contracts.push(await newERC20('0x1C4E37Cb2A1DE715A73Cd7Fc1aF0855Beee98209')) // BUK\r\n        break\r\n    }\r\n    return contracts\r\n  }\r\n\r\n  async function listNonFungibleTokens(): Promise<ERC721[]> {\r\n    const contracts: ERC721[] = []\r\n    switch (network) {\r\n      case 'main':\r\n        contracts.push(await newERC721('0x06012c8cf97BEaD5deAe237070F9587f8E7A266d')) // CK\r\n        contracts.push(await newERC721('0xc1Caf0C19A8AC28c41Fe59bA6c754e4b9bd54dE9')) // CriptoSkulls\r\n        contracts.push(await newERC721('0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85', 'Ethereum Name Service', 'ENS')) // ENS\r\n        contracts.push(await newERC721('0x959e104E1a4dB6317fA58F8295F586e1A978c297')) // EST\r\n        contracts.push(await newERC721('0x4F41d10F7E67fD16bDe916b4A6DC3Dd101C57394')) // FLOWER\r\n        contracts.push(await newERC721('0xF87E31492Faf9A91B02Ee0dEAAd50d51d56D5d4d')) // LAND\r\n        contracts.push(await newERC721('0xFBeef911Dc5821886e1dda71586d90eD28174B7d')) // KODA\r\n        contracts.push(await newERC721('0x913ae503153d9A335398D0785Ba60A2d63dDB4e2')) // PARCEL\r\n        contracts.push(await newERC721('0x22C1f6050E56d2876009903609a2cC3fEf83B415')) // POAP\r\n        contracts.push(await newERC721('0x60F80121C31A0d46B5279700f9DF786054aa5eE5')) // RARI\r\n        contracts.push(await newERC721('0xb932a70A57673d89f4acfFBE830E8ed7f75Fb9e0')) // SUPR\r\n        break\r\n      case 'ropsten':\r\n        contracts.push(await newERC721('0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85', 'Ethereum Name Service', 'ENS')) // ENS\r\n        contracts.push(await newERC721('0x124bf28A423B2CA80B3846c3AA0eB944FE7EbB95')) // EST\r\n        contracts.push(await newERC721('0x7A73483784ab79257bB11B96Fd62A2C3AE4Fb75B')) // LAND\r\n        contracts.push(await newERC721('0xE0394f4404182F537AC9F2F9695a4a4CD74a1ea3')) // KIE\r\n        contracts.push(await newERC721('0x29a3f97E9AC395E2E1BFa789bbBbb5468E6022af')) // KODA\r\n        break\r\n      case 'rinkeby':\r\n        contracts.push(await newERC721('0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85', 'Ethereum Name Service', 'ENS')) // ENS\r\n        contracts.push(await newERC721('0x28bEf22DF3e2040A4bE64A9Ca0e8b5Ae2B91462D')) // LAND\r\n        contracts.push(await newERC721('0xE0394f4404182F537AC9F2F9695a4a4CD74a1ea3')) // KIE\r\n        contracts.push(await newERC721('0x2Df6816286c583A7EF8637CD4b7Cc1CC62F6161E')) // KODA\r\n        contracts.push(await newERC721('0x913ae503153d9A335398D0785Ba60A2d63dDB4e2')) // PARCEL\r\n        break\r\n      case 'kovan':\r\n        // contracts.push(await newERC721('0x537263c440943f6a6808bCb8CcB3fe03EE838aD1')) // LAND\r\n        // contracts.push(await newERC721('0xE0394f4404182F537AC9F2F9695a4a4CD74a1ea3')) // KIE\r\n        break\r\n      case 'goerli':\r\n        contracts.push(await newERC721('0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85', 'Ethereum Name Service', 'ENS')) // ENS\r\n        contracts.push(await newERC721('0xE0394f4404182F537AC9F2F9695a4a4CD74a1ea3')) // KIE\r\n        break\r\n    }\r\n    return contracts\r\n  }\r\n\r\n  return {\r\n    network,\r\n    getAccounts,\r\n    selectAccount,\r\n    validateAddress,\r\n    getEtherBalance,\r\n    listAccountShares,\r\n    listAccountItems,\r\n    registerERC721,\r\n    listPaymentTokens\r\n  }\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { ERC20, ERC721Item, initializeWallet, listSupportedWallets, Wallet, WalletName } from '../services/api'\r\n\r\nexport const WalletContext = React.createContext<{\r\n  walletName: WalletName | undefined\r\n  setWalletName: (walletName: WalletName) => void\r\n  wallet: Wallet | undefined\r\n  setWallet: (wallet: Wallet) => void\r\n  accounts: string[]\r\n  setAccounts: (accounts: string[]) => void\r\n  accountIndex: number\r\n  setAccountIndex: (index: number) => void\r\n  accountItems: ERC721Item[]\r\n  setAccountItems: (accountItems: ERC721Item[]) => void\r\n  accountItemsCount: number\r\n  setAccountItemsCount: (count: number) => void\r\n  accountShares: ERC20[]\r\n  setAccountShares: (accountShares: ERC20[]) => void\r\n  accountSharesCount: number\r\n  setAccountSharesCount: (count: number) => void\r\n}>({\r\n  walletName: undefined,\r\n  setWalletName: () => null,\r\n  wallet: undefined,\r\n  setWallet: () => null,\r\n  accounts: [],\r\n  setAccounts: () => null,\r\n  accountIndex: 0,\r\n  setAccountIndex: () => null,\r\n  accountItems: [],\r\n  setAccountItems: () => null,\r\n  accountItemsCount: 0,\r\n  setAccountItemsCount: () => null,\r\n  accountShares: [],\r\n  setAccountShares: () => null,\r\n  accountSharesCount: 0,\r\n  setAccountSharesCount: () => null\r\n})\r\n\r\nexport default function WalletContextWrapper(props: React.PropsWithChildren<{}>) {\r\n  const { children } = props\r\n\r\n  const [walletName, setWalletName] = useState<WalletName | undefined>(undefined)\r\n  const [wallet, setWallet] = useState<Wallet | undefined>(undefined)\r\n  const [accounts, setAccounts] = useState<string[]>([])\r\n  const [accountIndex, setAccountIndex] = useState<number>(0)\r\n  const [accountItems, setAccountItems] = useState<ERC721Item[]>([])\r\n  const [accountItemsCount, setAccountItemsCount] = useState<number>(0)\r\n  const [accountShares, setAccountShares] = useState<ERC20[]>([])\r\n  const [accountSharesCount, setAccountSharesCount] = useState<number>(0)\r\n  const [rehydrate, setRehydrate] = useState(true)\r\n\r\n  const persistOffline = useCallback(() => {\r\n    if (!rehydrate) {\r\n      if (walletName !== undefined) localStorage.setItem('walletName', walletName)\r\n      if (accountIndex !== undefined) localStorage.setItem('accountIndex', JSON.stringify(accountIndex))\r\n    }\r\n  }, [walletName, accountIndex, rehydrate])\r\n\r\n  useEffect(() => {\r\n    persistOffline()\r\n  }, [persistOffline])\r\n\r\n  const rehydrateOffline = useCallback(async () => {\r\n    if (rehydrate) {\r\n      const supportedWallets = await listSupportedWallets()\r\n\r\n      const walletNameStorage = localStorage.getItem('walletName')\r\n\r\n      if (walletNameStorage && supportedWallets.includes(walletNameStorage as WalletName)) {\r\n        const walletStorage = await initializeWallet(walletNameStorage as WalletName)\r\n        const accountsStorage = await walletStorage.getAccounts()\r\n\r\n        if (accountsStorage[0]) {\r\n          walletStorage.selectAccount(accountsStorage[0])\r\n        }\r\n\r\n        setWallet(walletStorage)\r\n        setWalletName(walletNameStorage as WalletName)\r\n        setAccounts(accountsStorage)\r\n\r\n        const accountIndexStorage = localStorage.getItem('accountIndex')\r\n        if (accountIndexStorage) setAccountIndex(Number(JSON.parse(accountIndexStorage)))\r\n      }\r\n\r\n      setRehydrate(false)\r\n    }\r\n  }, [rehydrate])\r\n\r\n  useEffect(() => {\r\n    rehydrateOffline()\r\n  }, [rehydrateOffline])\r\n\r\n  if (rehydrate) return null\r\n\r\n  return (\r\n    <WalletContext.Provider\r\n      value={{\r\n        walletName,\r\n        setWalletName,\r\n        wallet,\r\n        setWallet,\r\n        accounts,\r\n        setAccounts,\r\n        accountIndex,\r\n        setAccountIndex,\r\n        accountItems,\r\n        setAccountItems,\r\n        accountItemsCount,\r\n        setAccountItemsCount,\r\n        accountShares,\r\n        setAccountShares,\r\n        accountSharesCount,\r\n        setAccountSharesCount\r\n      }}>\r\n      {children}\r\n    </WalletContext.Provider>\r\n  )\r\n}\r\n","import { Button, Table } from 'antd'\r\nimport React from 'react'\r\nimport './ContractClaim.scss'\r\n\r\ninterface Props {\r\n  claim: () => void\r\n  shares: string\r\n  receive: string\r\n}\r\n\r\nexport default function ContractClaim({ claim, shares, receive }: Props) {\r\n  const columns = [\r\n    {\r\n      dataIndex: 'label',\r\n      key: 'label'\r\n    },\r\n    {\r\n      dataIndex: 'data',\r\n      key: 'data'\r\n    }\r\n  ]\r\n\r\n  const dataSource = [\r\n    {\r\n      label: 'Your Participation',\r\n      data: shares\r\n    },\r\n    {\r\n      label: 'Share Balance',\r\n      data: receive\r\n    }\r\n  ]\r\n\r\n  const handleClaim = () => {\r\n    claim()\r\n  }\r\n\r\n  return (\r\n    <div className='contract-redeem'>\r\n      <div className='title'>\r\n        <h2>Claim NFT</h2>\r\n      </div>\r\n      <Table dataSource={dataSource} columns={columns} pagination={false} rowKey='label' />\r\n      <Button onClick={handleClaim} type='primary' size='large'>\r\n        Claim\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import { Table } from 'antd'\r\nimport React from 'react'\r\nimport './ContractData.scss'\r\n\r\ninterface Props {\r\n  name: string\r\n  totalSupply: string\r\n  exitPrice: string\r\n  address: string\r\n}\r\n\r\nexport default function ContractData({ name, totalSupply, exitPrice, address }: Props) {\r\n  const columns = [\r\n    {\r\n      title: 'Share Contract Name',\r\n      dataIndex: 'label',\r\n      key: 'label'\r\n    },\r\n    {\r\n      title: name,\r\n      dataIndex: 'data',\r\n      key: 'data'\r\n    }\r\n  ]\r\n\r\n  const dataSource = [\r\n    {\r\n      label: 'ERC20 Address',\r\n      data: address\r\n    },\r\n    {\r\n      label: 'Total Supply',\r\n      data: totalSupply\r\n    },\r\n    {\r\n      label: 'Exit Price',\r\n      data: exitPrice\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className='contract-data'>\r\n      <div className='title'>\r\n        <h2>Contract Data</h2>\r\n      </div>\r\n      <Table dataSource={dataSource} columns={columns} pagination={false} rowKey='label' />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './ContractImage.scss'\r\n\r\ninterface Props {\r\n  name: string\r\n  meta: string\r\n  description: string\r\n  src: string\r\n}\r\n\r\nexport default function ContractImage({ name, meta, description, src }: Props) {\r\n  return (\r\n    <div className='contract-image-item'>\r\n      <div>\r\n        <img src={src.split('https://cors-anywhere.herokuapp.com/')[1] || src} alt={name} />\r\n        <div className='contract-name'>{name}</div>\r\n        <div className='contract-meta'>{meta}</div>\r\n        <div className='contract-description'>{description}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Button, Table } from 'antd'\r\nimport React from 'react'\r\nimport './ContractRedeem.scss'\r\n\r\ninterface Props {\r\n  redeem: () => void\r\n  participation: string\r\n  shareBalance: string\r\n  pay: string\r\n}\r\n\r\nexport default function ContractRedeem({ redeem, participation, shareBalance, pay }: Props) {\r\n  const columns = [\r\n    {\r\n      dataIndex: 'label',\r\n      key: 'label'\r\n    },\r\n    {\r\n      dataIndex: 'data',\r\n      key: 'data'\r\n    }\r\n  ]\r\n\r\n  const dataSource = [\r\n    {\r\n      label: 'Your Participation',\r\n      data: participation\r\n    },\r\n    {\r\n      label: 'Share Balance',\r\n      data: shareBalance\r\n    },\r\n    {\r\n      label: 'Pay Amount',\r\n      data: pay\r\n    }\r\n  ]\r\n\r\n  const handleRedeem = () => {\r\n    redeem()\r\n  }\r\n\r\n  return (\r\n    <div className='contract-redeem'>\r\n      <div className='title'>\r\n        <h2>Redeem NFT</h2>\r\n      </div>\r\n      <Table dataSource={dataSource} columns={columns} pagination={false} rowKey='label' />\r\n      <Button onClick={handleRedeem} type='primary' size='large'>\r\n        Redeem\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import { Card } from 'antd'\r\nimport React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { WalletContext } from '../../../context/WalletContext'\r\nimport ContractClaim from '../ContractClaim/ContractClaim'\r\nimport ContractData from '../ContractData/ContractData'\r\nimport ContractImage from '../ContractImage/ContractImage'\r\nimport ContractRedeem from '../ContractRedeem/ContractRedeem'\r\nimport './ContractSecuritizationDetail.scss'\r\n\r\nexport default function ContractSecuritizationDetail() {\r\n  const { accountShares, accountIndex, accounts } = useContext(WalletContext)\r\n  const [contractImg, setContractImg] = useState<string>('')\r\n  const [isRedeemable, setIsRedeemable] = useState(false)\r\n  const [isClaimable, setIsClaimable] = useState(false)\r\n\r\n  const [totalSupply, setTotalSupply] = useState('')\r\n  const [issuedShare, setIssuedShare] = useState('')\r\n  const [exitPrice, setExitPrice] = useState('')\r\n  const [pay, setPay] = useState('')\r\n  const [receive, setReceive] = useState('')\r\n\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n  const contractId = location.pathname.split('/contract/detail/')[1]\r\n\r\n  const contract = accountShares.find(accountShare => accountShare.address === contractId)\r\n\r\n  if (!contract) history.push('/')\r\n\r\n  const getContractImg = useCallback(async () => {\r\n    if (contract) {\r\n      const erc721 = await contract.getERC721Item()\r\n      setContractImg(erc721.imageUri || '')\r\n    }\r\n  }, [contract])\r\n\r\n  const getContractData = useCallback(async () => {\r\n    if (contract) {\r\n      setIsRedeemable(await contract.isRedeemable())\r\n      setIsClaimable(await contract.isClaimable())\r\n      setIssuedShare(await contract.getAccountBalance(accounts[accountIndex]))\r\n      setExitPrice(await contract.getExitPrice())\r\n      setTotalSupply(await contract.getTotalSupply())\r\n      setReceive(await contract.getVaultBalance())\r\n      setPay(`${await contract.getAccountRedeemAmount(accounts[accountIndex])} ${(await contract.getPaymentToken())?.symbol || 'ETH'}`)\r\n    }\r\n  }, [contract, accounts, accountIndex])\r\n\r\n  useEffect(() => {\r\n    getContractImg()\r\n    getContractData()\r\n  }, [getContractImg, getContractData])\r\n\r\n  const redeemContract = async () => {\r\n    if (contract && redeemContract) {\r\n      await contract.redeem(accounts[accountIndex])\r\n      setIsRedeemable(false)\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  const claimContract = async () => {\r\n    if (contract && claimContract) {\r\n      await contract.claim(accounts[accountIndex])\r\n      setIsClaimable(false)\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className='contract-securitization-detail'>\r\n      <div className='content'>\r\n        <div className='contract-image'>\r\n          {contractImg && <ContractImage name={contract?.name || ''} meta='' description='' src={contractImg} />}\r\n        </div>\r\n        {contract && (\r\n          <div className='contract-item'>\r\n            {isRedeemable && (\r\n              <div className='contract-redeem-item'>\r\n                <ContractRedeem\r\n                  redeem={redeemContract}\r\n                  participation={`${(issuedShare && totalSupply && (Number(issuedShare) / Number(totalSupply)) * 100) || 100}%`}\r\n                  shareBalance={issuedShare}\r\n                  pay={pay}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {isClaimable && (\r\n              <div className='contract-claim-item'>\r\n                <ContractClaim claim={claimContract} receive={receive} shares={issuedShare} />\r\n              </div>\r\n            )}\r\n            <div className='contract-data-item'>\r\n              <ContractData name={contract?.name || ''} totalSupply={totalSupply} exitPrice={exitPrice} address={contract.address} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n","import { notification } from 'antd'\r\n\r\nexport const errorNotification = (message: string) => {\r\n  notification.error({\r\n    message,\r\n    placement: 'bottomLeft',\r\n    duration: 2\r\n  })\r\n}\r\n","import { Button, Card, Input, Select, Table } from 'antd'\r\nimport React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { WalletContext } from '../../../context/WalletContext'\r\nimport { ERC20 } from '../../../services/api'\r\nimport { errorNotification } from '../../../services/notification'\r\nimport ContractImage from '../ContractImage/ContractImage'\r\nimport './ContractSecuritizationEdit.scss'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function ContractSecuritizationEdit() {\r\n  const { accountItems } = useContext(WalletContext)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n  const contractId = location.pathname.split('/contract/securitize/')[1]\r\n\r\n  const contract = accountItems.find(accountItem => accountItem.tokenId === contractId)\r\n\r\n  if (!contract) history.push('/')\r\n\r\n  const { wallet } = useContext(WalletContext)\r\n\r\n  const [paymentTokens, setPaymentTokens] = useState<ERC20[]>([])\r\n  const [exitPrice, setExitPrice] = useState<string | undefined>(undefined)\r\n  const [paymentToken, setPaymentToken] = useState<string | undefined>(undefined)\r\n  const shares = '1000000.00000000'\r\n\r\n  const listPaymentTokens = useCallback(async () => {\r\n    if (wallet) {\r\n      const tokens = await wallet.listPaymentTokens()\r\n      setPaymentTokens(tokens)\r\n    }\r\n  }, [wallet])\r\n\r\n  useEffect(() => {\r\n    listPaymentTokens()\r\n  }, [listPaymentTokens])\r\n\r\n  const handleExitPrice = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setExitPrice(event.target.value)\r\n  }\r\n\r\n  const handlePaymentToken = (value: string) => {\r\n    setPaymentToken(value)\r\n  }\r\n\r\n  const selectAfter = (\r\n    <Select defaultValue='ETH' className='select-after' value={paymentToken} onChange={handlePaymentToken}>\r\n      <Option value=''>ETH</Option>\r\n      {paymentTokens.map(paymentTokenItem => (\r\n        <Option key={paymentTokenItem.symbol} value={paymentTokenItem.symbol}>\r\n          {paymentTokenItem.symbol}\r\n        </Option>\r\n      ))}\r\n    </Select>\r\n  )\r\n  const columns = [\r\n    {\r\n      dataIndex: 'label',\r\n      key: 'label'\r\n    },\r\n    {\r\n      dataIndex: 'data',\r\n      key: 'data'\r\n    }\r\n  ]\r\n  const dataSource = [\r\n    {\r\n      label: 'Shares',\r\n      data: shares\r\n    },\r\n    {\r\n      label: 'Exit Price',\r\n      data: <Input placeholder='0.00000000' addonAfter={selectAfter} type='number' value={exitPrice} onChange={handleExitPrice} />\r\n    }\r\n  ]\r\n  const securitize = async () => {\r\n    if (Number(exitPrice) < 0) {\r\n      errorNotification(\"Exit price can't no be negative\")\r\n    }\r\n\r\n    if (contract && shares && exitPrice) {\r\n      setLoading(true)\r\n      await contract.securitize(shares, exitPrice, paymentTokens.find(payToken => payToken.symbol === paymentToken) || null)\r\n      setLoading(false)\r\n      history.push(`/`)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className='contract-securitization-edit'>\r\n      <div className='content'>\r\n        <div className='contract-image'>\r\n          <ContractImage\r\n            name={contract?.name || ''}\r\n            src={contract?.imageUri?.split('https://cors-anywhere.herokuapp.com/')[1] || ''}\r\n            description={contract?.description || ''}\r\n            meta={`#${contract?.tokenId}`}\r\n          />\r\n        </div>\r\n        <div className='securitization-form'>\r\n          <div className='title'>\r\n            <h2>Securitize ERC721 Contract</h2>\r\n          </div>\r\n          <Table dataSource={dataSource} columns={columns} pagination={false} showHeader={false} rowKey='label' />\r\n          <Button onClick={securitize} type='primary' size='large' loading={loading}>\r\n            Securitize\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './Footer.scss'\r\n\r\nexport default function Footer() {\r\n  return <footer>© 2020 Nftfy</footer>\r\n}\r\n","import { DownOutlined } from '@ant-design/icons'\r\nimport { Button, Dropdown, Menu } from 'antd'\r\nimport React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport ntfy from '../../../../assets/nftfy.svg'\r\nimport { WalletContext } from '../../../../context/WalletContext'\r\nimport './Header.scss'\r\n\r\ninterface Props {\r\n  buttonAction: () => void\r\n}\r\n\r\nexport default function Header(props: Props) {\r\n  const { buttonAction } = props\r\n  const { accounts, accountIndex, setAccountIndex, wallet } = useContext(WalletContext)\r\n  const selectAccount = (index: number) => {\r\n    if (wallet) {\r\n      wallet.selectAccount(accounts[index])\r\n    }\r\n    setAccountIndex(index)\r\n  }\r\n  const dropdownMenu = (\r\n    <Menu>\r\n      {accounts.map((_account, index) => (\r\n        <Menu.Item key={`account-${accounts[index]}`} onClick={() => selectAccount(index)}>\r\n          {accounts[index]}\r\n        </Menu.Item>\r\n      ))}\r\n    </Menu>\r\n  )\r\n\r\n  return (\r\n    <header className='header'>\r\n      <div className='logo'>\r\n        <Link to='/'>\r\n          <img src={ntfy} alt='NTFFY' />\r\n        </Link>\r\n      </div>\r\n      <div className='wallet'>\r\n        {accounts.length > 0 && (\r\n          <Dropdown overlay={dropdownMenu} placement='bottomRight' disabled={accounts.length === 1}>\r\n            <Button className='walletName'>\r\n              {accounts[accountIndex].substring(0, 6)}\r\n              ...\r\n              {accounts[accountIndex].substring(accounts[accountIndex].length - 4, accounts[accountIndex].length)}\r\n              {accounts.length > 1 && <DownOutlined />}\r\n            </Button>\r\n          </Dropdown>\r\n        )}\r\n        {!accounts.length && (\r\n          <Button onClick={buttonAction} type='primary' size='large'>\r\n            Connect Wallet\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n","import { Button, Modal } from 'antd'\r\nimport React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport metamask from '../../../../assets/metamask.svg'\r\nimport portis from '../../../../assets/portis.svg'\r\nimport { WalletContext } from '../../../../context/WalletContext'\r\nimport { initializeWallet, listSupportedWallets, WalletName } from '../../../../services/api'\r\nimport './WalletManagerModal.scss'\r\n\r\ninterface Props {\r\n  visible: boolean\r\n  setVisible: (visible: boolean) => void\r\n}\r\nexport default function WalletManagerModal(props: Props) {\r\n  const { visible, setVisible } = props\r\n  const { setAccounts, setWalletName, setWallet } = useContext(WalletContext)\r\n\r\n  const [supportedWallets, setSupportedWallets] = useState<WalletName[]>([])\r\n  const [loadingWallet, setLoadingWallet] = useState<WalletName | undefined>(undefined)\r\n\r\n  const loadWallets = useCallback(async () => {\r\n    setSupportedWallets(await listSupportedWallets())\r\n  }, [setSupportedWallets])\r\n\r\n  useEffect(() => {\r\n    loadWallets()\r\n  }, [loadWallets])\r\n\r\n  const selectWallet = (walletName: WalletName) => async () => {\r\n    setLoadingWallet(walletName)\r\n\r\n    const wallet = await initializeWallet(walletName)\r\n    const accounts = await wallet.getAccounts()\r\n\r\n    if (accounts[0]) {\r\n      wallet.selectAccount(accounts[0])\r\n    }\r\n\r\n    setWallet(wallet)\r\n    setWalletName(walletName)\r\n    setAccounts(accounts)\r\n\r\n    handleCancel()\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false)\r\n    setLoadingWallet(undefined)\r\n  }\r\n\r\n  return (\r\n    <Modal className='wallet-manager-modal' title='Wallet Manager' visible={visible} footer={null} onCancel={handleCancel} width={300}>\r\n      {supportedWallets.includes('metamask') && (\r\n        <Button\r\n          className='metamask'\r\n          size='large'\r\n          icon={<img src={metamask} alt='Metamask' width={24} height={25} />}\r\n          onClick={selectWallet('metamask')}\r\n          loading={loadingWallet === 'metamask'}>\r\n          Metamask\r\n        </Button>\r\n      )}\r\n      {supportedWallets.includes('portis') && (\r\n        <Button\r\n          className='portis'\r\n          size='large'\r\n          icon={<img src={portis} alt='Metamask' width={24} height={25} />}\r\n          onClick={selectWallet('portis')}\r\n          loading={loadingWallet === 'portis'}>\r\n          Portis\r\n        </Button>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport ContractSecuritizationDetail from '../../components/ContractSecuritization/ContractSecuritizationDetail/ContractSecuritizationDetail'\r\nimport ContractSecuritizationEdit from '../../components/ContractSecuritization/ContractSecuritizationEdit/ContractSecuritizationEdit'\r\nimport Footer from '../../components/shared/layout/Footer/Footer'\r\nimport Header from '../../components/shared/layout/Header/Header'\r\nimport WalletManagerModal from '../../components/shared/modal/WalletManagerModal/WalletManagerModal'\r\nimport './ContractSecuritization.scss'\r\n\r\nexport default function ContractSecuritization() {\r\n  const [openWalletModal, setOpenWalletModal] = useState(false)\r\n  const location = useLocation()\r\n\r\n  const openWalletManager = () => {\r\n    setOpenWalletModal(!openWalletModal)\r\n  }\r\n\r\n  return (\r\n    <main className='contract-securitization'>\r\n      <Header buttonAction={openWalletManager} />\r\n      {location.pathname.includes('/contract/securitize') && <ContractSecuritizationEdit />}\r\n      {location.pathname.includes('/contract/detail') && <ContractSecuritizationDetail />}\r\n      <Footer />\r\n      <WalletManagerModal visible={openWalletModal} setVisible={openWalletManager} />\r\n    </main>\r\n  )\r\n}\r\n","import { Card } from 'antd'\r\nimport React from 'react'\r\nimport ft from '../../../assets/ft.svg'\r\nimport './FungibleTokensEmpty.scss'\r\n\r\nexport default function FungibleTokensEmpty() {\r\n  return (\r\n    <Card className='fungible-tokens-empty'>\r\n      <img src={ft} alt='Fungible Token' />\r\n      <p>You need to convert some Non-Fungible Token into Fungible Token</p>\r\n    </Card>\r\n  )\r\n}\r\n","import { Card, Pagination } from 'antd'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { WalletContext } from '../../../context/WalletContext'\r\nimport { ERC20 } from '../../../services/api'\r\nimport './FungibleTokensList.scss'\r\n\r\ninterface Props {\r\n  count: number\r\n  setPagination: (offset: number) => void\r\n}\r\n\r\nexport default function FungibleTokensList({ count, setPagination }: Props) {\r\n  const { accountShares } = useContext(WalletContext)\r\n\r\n  const [accountSharesCount, setAccountSharesCount] = useState<Array<ERC20 & { sharesCount: string; erc721ImageUri: string }>>([])\r\n\r\n  useEffect(() => {\r\n    getAccountSharesCount(accountShares)\r\n  }, [accountShares])\r\n\r\n  const getAccountSharesCount = async (accountSharesItem: ERC20[]) => {\r\n    const accountSharesItemPromise = await Promise.all(\r\n      accountSharesItem.map(async shareItem => {\r\n        const sharesCount = await shareItem.getSharesCount()\r\n\r\n        const erc721 = await shareItem.getERC721Item()\r\n\r\n        return { ...shareItem, sharesCount, erc721ImageUri: erc721.imageUri || '' }\r\n      })\r\n    )\r\n\r\n    setAccountSharesCount(accountSharesItemPromise)\r\n  }\r\n\r\n  const [page, setPage] = useState(1)\r\n\r\n  const setPageNumber = (pageNumber: number) => {\r\n    setPage(pageNumber)\r\n    setPagination(pageNumber * 8 - 8)\r\n  }\r\n\r\n  return (\r\n    <Card className='ft-list-container'>\r\n      <div className='ft-list'>\r\n        {accountSharesCount.map(ft => (\r\n          <Link key={ft.address} to={`/contract/detail/${ft.address}`}>\r\n            <div className='ft-item'>\r\n              <div>\r\n                {ft.erc721ImageUri && (\r\n                  <img src={ft.erc721ImageUri.split('https://cors-anywhere.herokuapp.com/')[1] || ft.erc721ImageUri} alt={ft.name} />\r\n                )}\r\n              </div>\r\n              <div>\r\n                <div className='ft-symbol'>{ft.symbol}</div>\r\n                <div className='ft-name'>{ft.name}</div>\r\n                <div className='ft-shares'>{ft.sharesCount}</div>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n      {count > 8 && (\r\n        <div className='ft-pagination'>\r\n          <Pagination size='small' current={page} total={count} onChange={setPageNumber} />\r\n        </div>\r\n      )}\r\n    </Card>\r\n  )\r\n}\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { WalletContext } from '../../context/WalletContext'\r\nimport FungibleTokensEmpty from './FungibleTokensEmpty/FungibleTokensEmpty'\r\nimport FungibleTokensList from './FungibleTokensList/FungibleTokensList'\r\n\r\nexport default function FungibleTokens() {\r\n  const {\r\n    wallet,\r\n    accounts,\r\n    accountIndex,\r\n    accountShares,\r\n    setAccountShares,\r\n    setAccountSharesCount,\r\n    accountSharesCount,\r\n    accountItems\r\n  } = useContext(WalletContext)\r\n\r\n  const [offset, setOffset] = useState(0)\r\n\r\n  const setPagination = (offsetNumber: number) => {\r\n    setOffset(offsetNumber)\r\n  }\r\n\r\n  const loadAccountShares = useCallback(async () => {\r\n    if (wallet && accountItems) {\r\n      try {\r\n        const fts = await wallet.listAccountShares(accounts[accountIndex], offset, 8)\r\n        setAccountShares(fts.items)\r\n        setAccountSharesCount(fts.count)\r\n      } catch (error) {\r\n        setAccountShares([])\r\n      }\r\n    }\r\n  }, [accountIndex, accounts, wallet, setAccountShares, setAccountSharesCount, accountItems, offset])\r\n  useEffect(() => {\r\n    loadAccountShares()\r\n  }, [loadAccountShares])\r\n\r\n  if (!accountShares.length) {\r\n    return <FungibleTokensEmpty />\r\n  }\r\n\r\n  return <FungibleTokensList setPagination={setPagination} count={accountSharesCount} />\r\n}\r\n","import { Button, Input } from 'antd'\r\nimport React, { useContext, useState } from 'react'\r\nimport { WalletContext } from '../../../context/WalletContext'\r\nimport { errorNotification } from '../../../services/notification'\r\nimport './AddNonFungibleTokens.scss'\r\n\r\nexport default function AddNonFungibleTokens() {\r\n  const { accounts, accountIndex, wallet, setAccountItems, setAccountItemsCount, setAccountShares, setAccountSharesCount } = useContext(\r\n    WalletContext\r\n  )\r\n\r\n  const [nftInput, setNftInput] = useState('')\r\n\r\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setNftInput(event.target.value)\r\n  }\r\n\r\n  const addNft = async () => {\r\n    if (!nftInput.length) {\r\n      errorNotification('NFT Hash is empty')\r\n    } else if (wallet && !(await wallet.validateAddress(nftInput))) {\r\n      errorNotification('NFT Hash is invalid')\r\n    } else if (wallet) {\r\n      await wallet.registerERC721(nftInput)\r\n\r\n      if (wallet) {\r\n        const nfts = await wallet.listAccountItems(accounts[accountIndex], 0, 12)\r\n        if (nfts.items.length > 0) {\r\n          setAccountItems(nfts.items)\r\n          setAccountItemsCount(nfts.count)\r\n        }\r\n\r\n        const fts = await wallet.listAccountShares(accounts[accountIndex], 0, 8)\r\n        if (fts.items.length > 0) {\r\n          setAccountShares(fts.items)\r\n          setAccountSharesCount(fts.count)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='add-non-fungible-form'>\r\n      <Input placeholder='NFT Hash' disabled={!accounts[accountIndex]} onChange={handleInput} value={nftInput} />\r\n      <Button type='primary' disabled={!accounts[accountIndex]} onClick={addNft}>\r\n        Set NFT\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import { Card } from 'antd'\r\nimport React, { useContext } from 'react'\r\nimport nft from '../../../assets/nft.svg'\r\nimport { WalletContext } from '../../../context/WalletContext'\r\nimport AddNonFungibleTokens from '../AddNonFungibleTokens/AddNonFungibleTokens'\r\nimport './NonFungibleTokensEmpty.scss'\r\n\r\nexport default function NonFungibleTokensEmpty() {\r\n  const { accounts, accountIndex } = useContext(WalletContext)\r\n\r\n  return (\r\n    <Card className='non-fungible-tokens-empty'>\r\n      <img src={nft} alt='Non Fungible Token' />\r\n      {!accounts[accountIndex] ? (\r\n        <p>Connect your Ethereum Wallet to set Non-Fungible Tokens</p>\r\n      ) : (\r\n        <p>Input your Non Fungible Token Hash on the form</p>\r\n      )}\r\n      <AddNonFungibleTokens />\r\n    </Card>\r\n  )\r\n}\r\n","import { Card, Pagination } from 'antd'\r\nimport React, { useContext, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { WalletContext } from '../../../context/WalletContext'\r\nimport AddNonFungibleTokens from '../AddNonFungibleTokens/AddNonFungibleTokens'\r\nimport './NonFungibleTokensList.scss'\r\n\r\ninterface Props {\r\n  count: number\r\n  setPagination: (offset: number) => void\r\n}\r\n\r\nexport default function NonFungibleTokensList({ count, setPagination }: Props) {\r\n  const { accountItems } = useContext(WalletContext)\r\n  const [page, setPage] = useState(1)\r\n\r\n  const setPageNumber = (pageNumber: number) => {\r\n    setPage(pageNumber)\r\n    setPagination(pageNumber * 12 - 12)\r\n  }\r\n\r\n  return (\r\n    <Card className='nft-list-container'>\r\n      <AddNonFungibleTokens />\r\n      <div className='nft-list'>\r\n        {accountItems.map(nft => (\r\n          <Link key={nft.tokenId} to={`/contract/securitize/${nft.tokenId}`}>\r\n            <div className='nft-item'>\r\n              {nft.imageUri && <img src={nft.imageUri.split('https://cors-anywhere.herokuapp.com/')[1] || nft.imageUri} alt={nft.name} />}\r\n              <div className='contract-name'>{nft.contract.name}</div>\r\n              <div className='nft-name'>{nft.name}</div>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n      {count > 12 && (\r\n        <div className='nft-pagination'>\r\n          <Pagination size='small' current={page} total={count} onChange={setPageNumber} />\r\n        </div>\r\n      )}\r\n    </Card>\r\n  )\r\n}\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { WalletContext } from '../../context/WalletContext'\r\nimport NonFungibleTokensEmpty from './NonFungibleTokensEmpty/NonFungibleTokensEmpty'\r\nimport NonFungibleTokensList from './NonFungibleTokensList/NonFungibleTokensList'\r\n\r\nexport default function NonFungibleTokens() {\r\n  const { wallet, accounts, accountIndex, accountItems, accountItemsCount, setAccountItems, setAccountItemsCount } = useContext(\r\n    WalletContext\r\n  )\r\n\r\n  const [offset, setOffset] = useState(0)\r\n\r\n  const setPagination = (offsetNumber: number) => {\r\n    setOffset(offsetNumber)\r\n  }\r\n\r\n  const loadAccountItems = useCallback(async () => {\r\n    if (wallet) {\r\n      const nfts = await wallet.listAccountItems(accounts[accountIndex], offset, 12)\r\n      if (nfts.items.length > 0) {\r\n        setAccountItems(nfts.items)\r\n        setAccountItemsCount(nfts.count)\r\n      }\r\n    }\r\n  }, [accountIndex, accounts, wallet, setAccountItems, offset, setAccountItemsCount])\r\n\r\n  useEffect(() => {\r\n    loadAccountItems()\r\n  }, [loadAccountItems])\r\n\r\n  if (!accountItems.length) {\r\n    return <NonFungibleTokensEmpty />\r\n  }\r\n\r\n  return <NonFungibleTokensList setPagination={setPagination} count={accountItemsCount} />\r\n}\r\n","import React, { useState } from 'react'\r\nimport ft from '../../assets/ft-active.svg'\r\nimport nft from '../../assets/nft-active.svg'\r\nimport FungibleTokens from '../../components/FungibleTokens/FungibleTokens'\r\nimport NonFungibleTokens from '../../components/NonFungibleTokens/NonFungibleTokens'\r\nimport Footer from '../../components/shared/layout/Footer/Footer'\r\nimport Header from '../../components/shared/layout/Header/Header'\r\nimport WalletManagerModal from '../../components/shared/modal/WalletManagerModal/WalletManagerModal'\r\nimport './Home.scss'\r\n\r\nexport default function Home() {\r\n  const [openWalletModal, setOpenWalletModal] = useState(false)\r\n\r\n  const openWalletManager = () => {\r\n    setOpenWalletModal(!openWalletModal)\r\n  }\r\n  return (\r\n    <main className='home'>\r\n      <Header buttonAction={openWalletManager} />\r\n      <div className='content'>\r\n        <div className='nft'>\r\n          <h2>\r\n            <img src={nft} alt='Non-Fungible Token' />\r\n            Non-Fungible Tokens ERC721\r\n          </h2>\r\n          <NonFungibleTokens />\r\n        </div>\r\n        <div className='ft'>\r\n          <h2>\r\n            <img src={ft} alt='Fungible Token' />\r\n            Fungible Tokens ERC20\r\n          </h2>\r\n          <FungibleTokens />\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n      <WalletManagerModal visible={openWalletModal} setVisible={openWalletManager} />\r\n    </main>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport ContractSecuritization from './screens/ContractSecuritization/ContractSecuritization'\r\nimport Home from './screens/Home/Home'\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path='/' exact component={Home} />\r\n        <Route path='/contract/securitize/:id' component={ContractSecuritization} />\r\n        <Route path='/contract/detail/:id' component={ContractSecuritization} />\r\n        <Route path='*' component={Home} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n","import React from 'react'\nimport WalletContextWrapper from './context/WalletContext'\nimport Routes from './Routes'\n\nfunction App() {\n  return (\n    <WalletContextWrapper>\n      <Routes />\n    </WalletContextWrapper>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(`This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA`)\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(`New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.`)\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import 'antd/dist/antd.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './styles.scss'\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.register()\n"],"sourceRoot":""}